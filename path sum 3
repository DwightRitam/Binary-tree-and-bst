/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    private:
    void solve(TreeNode* root, int targetSum,unordered_map<long,int>mp,
    int &count,long sum)
    {
        if(!root) return;
        sum+=root->val;
        if(sum==targetSum) count++;

       
            count+=mp[sum-targetSum];
        
        mp[sum]++;
        solve(root->left,targetSum,mp,count,sum);
        solve(root->right,targetSum,mp,count,sum);
        mp[sum]--;
    }
public:
    int pathSum(TreeNode* root, int targetSum) {
        unordered_map<long,int>mp;
        int count=0;
        
        solve(root,targetSum,mp,count,0);
        return count;
    }
};
